apiVersion: apps/v1
kind: Deployment
metadata:
  name: quarkus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quarkus
  template:
    metadata:
      labels:
        app: quarkus
    spec:
      initContainers:
        - name: init-generate-encryption-key
          image: alpine
          command:
            - sh
            - -c
            - apk add --no-cache openssl && openssl rand -base64 32 > /etc/encryption/encryption-key
          volumeMounts:
            - name: encryption-volume
              mountPath: /etc/encryption
      containers:
        - name: quarkus
          image: ghcr.io/tommyneumaier/leomail/leomail-quarkus:latest
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: postgres-secrets
            - secretRef:
                name: minio-secrets
            - secretRef:
                name: quarkus-secrets
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: encryption-volume
              mountPath: /etc/encryption
      volumes:
        - name: encryption-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: quarkus-service
spec:
  selector:
    app: quarkus
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080