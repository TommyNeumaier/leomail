stages:
  - build
  - test
  - deploy

variables:
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
  SSH_USER: deployment
  SSH_HOST: tommyneumaier.at
  APP_NAME: leomail-backend

before_script:
  # Set up SSH
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

build:
  stage: build
  image: maven:3.8.5-openjdk-11
  script:
    - cd app/leomail-backend
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - app/leomail-backend/target/*.jar

test:
  stage: test
  image: maven:3.8.5-openjdk-11
  script:
    - cd app/leomail-backend
    - mvn test

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk update && apk add openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/deployment_key
    - chmod 600 ~/.ssh/deployment_key
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/deployment_key
    - ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
  script:
    - scp -i ~/.ssh/deployment_key app/leomail-backend/target/${APP_NAME}.jar $SSH_USER@$SSH_HOST:/home/$SSH_USER/
    - ssh -i ~/.ssh/deployment_key $SSH_USER@$SSH_HOST 'pkill -f ${APP_NAME}.jar || true'
    - ssh -i ~/.ssh/deployment_key $SSH_USER@$SSH_HOST "nohup java -jar /home/$SSH_USER/${APP_NAME}.jar &"
  only:
    - main
